[{"D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\index.js":"1","D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\components\\app\\app.js":"2","D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\components\\navigation-panel\\navigation-panel.js":"3","D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\components\\book-list\\book-list.js":"4","D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\components\\contact-counter\\contact-counter.js":"5","D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\components\\search-input\\search-input.js":"6","D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\components\\contacts-filter\\contacts-filter.js":"7"},{"size":167,"mtime":1611615663272,"results":"8","hashOfConfig":"9"},{"size":4438,"mtime":1612028255775,"results":"10","hashOfConfig":"9"},{"size":1715,"mtime":1611690813368,"results":"11","hashOfConfig":"9"},{"size":1163,"mtime":1612001115659,"results":"12","hashOfConfig":"9"},{"size":791,"mtime":1611996490891,"results":"13","hashOfConfig":"9"},{"size":489,"mtime":1611692837954,"results":"14","hashOfConfig":"9"},{"size":483,"mtime":1612029569961,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1y6ehrl",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\index.js",[],["32","33"],"D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\components\\app\\app.js",["34"],"import React, {Component} from 'react';\r\nimport './app.css'\r\nimport NavigationPanel from \"../navigation-panel/navigation-panel\";\r\nimport BookList from \"../book-list/book-list\";\r\nimport ContactCounter from \"../contact-counter/contact-counter\";\r\nimport SearchInput from \"../search-input/search-input\";\r\nimport ContactsFilter from \"../contacts-filter/contacts-filter\";\r\n\r\n\r\nexport default class App extends Component{\r\n\r\n    maxId = 0;\r\n\r\n    state = {\r\n        contacts : [],\r\n        contactCounter : 0,\r\n        searchValue : '',\r\n        favorite : [],\r\n        favoriteTab : false\r\n    }\r\n\r\n    addContact = (name, number) => {\r\n        const {contacts, contactCounter} = this.state;\r\n\r\n        const duplicate = contacts.every(el => el.name !== name)\r\n        if(duplicate){\r\n            const newContact = {\r\n                name: name,\r\n                number : number,\r\n                id: this.maxId++\r\n            }\r\n\r\n            this.contactCounter(contactCounter.length);\r\n\r\n            this.setState(() => {\r\n                return {\r\n                    contacts:[ ...contacts,\r\n                        newContact\r\n                    ],\r\n                    contactCounter : contactCounter + 1,\r\n                    searchValue : ''\r\n                }\r\n            })\r\n        }else{\r\n            return false;\r\n        }\r\n\r\n\r\n    };\r\n\r\n    contactCounter = (count) => {\r\n        return this.setState({contactCounter : count - 1})\r\n    }\r\n\r\n    deleteContact = (id) => {\r\n        const {contacts, contactCounter} = this.state;\r\n        const idx = this.state.contacts.findIndex(el => el.id === id);\r\n\r\n        this.contactCounter(contactCounter.length);\r\n        this.setState({\r\n            contacts: [...contacts.slice(0, idx),\r\n                    ...contacts.slice(idx+1)],\r\n            contactCounter: contactCounter-1,\r\n            searchValue : ''\r\n\r\n        })\r\n    }\r\n\r\n    searchContact = (e) => {\r\n        const {contacts, favoriteTab, favorite} = this.state;\r\n        console.log('eeee', e)\r\n        if(e){\r\n\r\n            if(favoriteTab){\r\n                let idx = favorite.filter(el => el.name.indexOf(e) !== -1 );\r\n\r\n                this.setState({\r\n                    searchValue : [...idx]\r\n                })\r\n            }else{\r\n                let idx = contacts.filter(el => el.name.indexOf(e) !== -1 );\r\n                this.setState({\r\n                    searchValue : [...idx]\r\n                })\r\n            }\r\n        }else{\r\n            this.setState({\r\n                searchValue : ''\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    favoriteContact = (id) => {\r\n            const {contacts, contactCounter, favorite} = this.state;\r\n            const idx = this.state.contacts.findIndex(el => el.id === id);\r\n\r\n            this.contactCounter(contactCounter.length);\r\n            this.setState({\r\n                favorite: [...favorite.slice(0, idx),\r\n                    contacts[idx]],\r\n            })\r\n\r\n    }\r\n    showFavoriteContacts = () => {\r\n         this.setState({favoriteTab : true})\r\n    }\r\n\r\n    showAllContacts = () => {\r\n         this.setState({favoriteTab : false})\r\n\r\n    }\r\n\r\n    displayItems = (searchValue) => {\r\n        if(searchValue){\r\n            console.log('ёрч валю', searchValue)\r\n            console.log('че значт', !!searchValue)\r\n            return searchValue;\r\n        }else if(this.state.favoriteTab) {\r\n            return this.state.favorite;\r\n        }else{\r\n            return this.state.contacts;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {searchValue, contacts, favorite} = this.state;\r\n\r\n        //const visible = searchValue ? searchValue :contacts;\r\n        const visible = this.displayItems(searchValue);\r\n        const counter = searchValue.length > 0 ? searchValue.length : contacts.length;\r\n\r\n        return (\r\n            <div className='phone-book__wrapper'>\r\n                <NavigationPanel addContact={(name, number) => this.addContact(name, number)}/>\r\n                <ContactCounter contactCounter={counter}/>\r\n                <ContactsFilter showFavoriteContacts={this.showFavoriteContacts} showAllContacts={this.showAllContacts}/>\r\n                <BookList contacts={visible}\r\n                          deleteContact={this.deleteContact}\r\n                          favoriteContact={this.favoriteContact}/>\r\n                <SearchInput searchContact = {this.searchContact}/>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\components\\navigation-panel\\navigation-panel.js",[],"D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\components\\book-list\\book-list.js",[],"D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\components\\contact-counter\\contact-counter.js",[],"D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\components\\search-input\\search-input.js",[],"D:\\Работа\\JavaScript\\Git\\Phone_book_React\\src\\components\\contacts-filter\\contacts-filter.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":128,"column":39,"nodeType":"41","messageId":"42","endLine":128,"endColumn":47},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'favorite' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]